<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gorillatoolkit on Go und die Welt</title>
    <link>https://as27.github.io/categories/gorillatoolkit/</link>
    <description>Recent content in Gorillatoolkit on Go und die Welt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de</language>
    <lastBuildDate>Fri, 07 Apr 2017 12:25:50 +0100</lastBuildDate>
    
	<atom:link href="https://as27.github.io/categories/gorillatoolkit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go.rice mit dem Gorillatoolkit verwenden</title>
      <link>https://as27.github.io/blog/2017/04/07/go.rice-mit-dem-gorillatoolkit-verwenden/</link>
      <pubDate>Fri, 07 Apr 2017 12:25:50 +0100</pubDate>
      
      <guid>https://as27.github.io/blog/2017/04/07/go.rice-mit-dem-gorillatoolkit-verwenden/</guid>
      <description>go.rice ist ein sehr nützliches Tool, um weitere Dateien in die Go App zu packen. Hierfür werden die Textdateien einfach in go Dateien eingefügt. Bei der Verwendung des Routers des Gorillatoolkits muss beachtet werden, dass man die Methode PathPrefix() verwendet.
Das ganze sieht dann im Code wie folgt aus:
r := mux.NewRouter() box := rice.MustFindBox(&amp;quot;html&amp;quot;) htmlFiles := http.StripPrefix(&amp;quot;/lib/&amp;quot;, http.FileServer(box.HTTPBox())) r.PathPrefix(&amp;quot;/lib/&amp;quot;).Handler(htmlFiles)  </description>
    </item>
    
  </channel>
</rss>