<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rest on Go und die Welt</title>
    <link>https://as27.github.io/categories/rest/</link>
    <description>Recent content in Rest on Go und die Welt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de</language>
    <lastBuildDate>Tue, 17 May 2016 22:40:53 +0200</lastBuildDate>
    
	<atom:link href="https://as27.github.io/categories/rest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tutorial über Model und View in einem REST Service</title>
      <link>https://as27.github.io/blog/2016/05/17/tutorial-%C3%BCber-model-und-view-in-einem-rest-service/</link>
      <pubDate>Tue, 17 May 2016 22:40:53 +0200</pubDate>
      
      <guid>https://as27.github.io/blog/2016/05/17/tutorial-%C3%BCber-model-und-view-in-einem-rest-service/</guid>
      <description>http://stevenwhite.com/building-a-rest-service-with-golang-2/  Steven White beschreibt in seinem Tutorial, wie man einen einfachen Web Server mit Go umsetzt. Dabei gliedert er seinen Code in Model und Controller. Alle Models werden dabei in einem Packet models und die Controller in einem Packet controller umgesetzt.
Dieses Pattern ist übersichtlich und führt zu einem strukturierten Code.</description>
    </item>
    
  </channel>
</rss>